extends ../layout

include ../mixins/_navbar

block header
  +navbar()
  
block content
  .container
    form.col.s12(action="/account/edit" method="POST" enctype="multipart/form-data")
      br
      .row
        .col.s12
          h5 My Profile
      br    
      .row
        .col.m2.push-m5.s4.push-s4
          if user.photo
            if user.photo.startsWith("https://graph.facebook.com/")
              img.circle.responsive-img(src=`${user.photo}` id="edit-image") 
            else 
              img.circle.responsive-img(src=`../uploads/${user.photo}` id="edit-image")
          else      
            img.circle.responsive-img(src='/images/photos/user.png' id="edit-image") 
          .file-field.input-field
            .btn.waves-effect.waves-light.primary-blue
              span Edit Photo
              input(type="file" name="photo" id="photo" accept="image/gif, image/png, image/jpeg") 
      br
      .row
        .input-field.col.m5.s12
          i.material-icons.prefix.fa.fa-user-o
          input#name(type='text', name='firstName', value=user.firstName, required="")
          label(for='firstName') First Name   
        .input-field.col.m5.push-m1.s12
          i.material-icons.prefix.fa.fa-user-o
          input#name(type='text', name='lastName', value=user.lastName, required="")
          label(for='lastName') Last Name          
        //- .input-field.col.m5.push-m1.s12
        //-   i.material-icons.prefix.fa.fa-envelope-o
        //-   input#email.validate(type='email', name='email', value=user.email)
        //-   label(for='email') Email
      .row
        .input-field.col.m5.s12
          i.material-icons.prefix.fa.fa-globe
          label(for="city") City
          input(type="text" id="city" name="location[city]" value=(user.location && user.location.city))
        .input-field
          input(type="hidden" id="lngCity" name="location[coordinates][0]" value=(user.location && user.location.coordinates[0]))
        .input-field
          input(type="hidden" id="latCity" name="location[coordinates][1]" value=(user.location && user.location.coordinates[1]))  
        .input-field.col.m5.push-m1.s12
          i.material-icons.prefix.fa.fa-venus-mars
          select(id="gender" name='gender' value=user.gender) Gender
            option(value='Male') Male
            option(value='Female') Female
            option(value='Other') Other        
      .row
        .input-field.col.s12
          i.material-icons.prefix
            | mode_edit
          input#email.validate(type='text', name='bio', value=user.bio)
          label(for='bio') Bio
      .row
        p Activities
        - const activityChoices = ['Hiking', 'Backpacking', 'Camping', 'Cycling', 'Climbing', 'Surfing', 'Scuba-Diving', 'Canoeing', 'Fishing']
        - const activities = user.activities || []
        .input-field.center
          each activity in activityChoices
            input(type="checkbox" id=activity value=activity name="activities" checked=(activities.includes(activity)))
            label(for=activity style="padding-right:15px;") #{activity}
      br
      center
        .row
          button.col.s12.btn.btn-large.waves-effect.primary-blue(type='submit', name='btn-update') Update 
