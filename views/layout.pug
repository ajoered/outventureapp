doctype html
head
  meta(http-equiv='Content-Type', content='text/html; charset=UTF-8')
  meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1.0')
  meta(name='author', content='Outventure')
  title= `${title} | ${h.siteName}`
  // Lato Font
  link(href='http://fonts.googleapis.com/css?family=Lato:300,400,700', rel='stylesheet', type='text/css')
  // Material Icons
  link(href='https://fonts.googleapis.com/icon?family=Material+Icons', rel='stylesheet')
  // CSS
  link(rel='stylesheet', href='/dist/style.css')
  link(rel='stylesheet', href='/dist/materialize.css')
  link(rel='stylesheet prefetch', href='https://netdna.bootstrapcdn.com/font-awesome/3.1.1/css/font-awesome.css')
  link(rel="shortcut icon" type="image/png" href="/images/icons/symbolBlack.png")
  body
    block header

    block messages
      if locals.flashes
        .container
            - const categories = Object.keys(locals.flashes)
            each category in categories
              each message in flashes[category]
                .flash-messages(class=`flash-${category}`)
                  .flash(class=`flash--${category}`)
                    p.flash__text!= message
                    button.flash__remove(onClick="this.parentElement.remove()") &times;
    block content

    block scripts
      script(src='https://code.jquery.com/jquery-2.1.1.min.js')
      // Font Awesome
      script(src='https://use.fontawesome.com/9283ff95ca.js')
      // Smooth Scroll
      script(src='https://cdnjs.cloudflare.com/ajax/libs/smooth-scroll/11.0.2/js/smooth-scroll.js')
      // Scroll Magic
      script(src='http://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.5/ScrollMagic.min.js')
      script(src='http://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.5/plugins/debug.addIndicators.js')
      script(src=`https://maps.googleapis.com/maps/api/js?key=${process.env.MAP_KEY}&libraries=places`)
      script(src="/dist/App.bundle.js")
      script(src="/javascripts/materialize.js")
      script.
        smoothScroll.init({
        speed: 800, // Integer. How fast to complete the scroll in milliseconds
        offset: 90, // Integer or Function returning an integer. How far to offset the scrolling anchor location in pixels
        easing: 'easeInOutCubic', // Easing pattern to use
        });
